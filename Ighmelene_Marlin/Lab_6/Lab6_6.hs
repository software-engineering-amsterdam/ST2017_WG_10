module Lab6_6 where

import Data.List
import System.Random
import Lecture6

-- 60 min

{-
*Lab6_6> main66 
Checking the first 5500 Carmichael numbers for false primes
Each dot (.) represents an exposed composite

Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).

....................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).

....................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).


Giving up. Can't find any primes (k=9223372036854775807).

(190.45 secs, 95,459,118,040 bytes)
-}

main66 :: IO ()
main66 = doMain66 0

carmichael :: [Integer]
carmichael = [ (6*k+1)*(12*k+1)*(18*k+1) | 
      k <- [2..], 
      prime (6*k+1), 
      prime (12*k+1), 
      prime (18*k+1) ]

---------------
-- Iterators --
---------------
iterateTestMillerRabin :: Int -> Int -> [Integer] -> Int -> Int -> IO ()
iterateTestMillerRabin 0 _ _ _ _        = putStrLn ""
iterateTestMillerRabin n k xs m verbose = do
                                            a <- testMillerRabin n k xs m verbose
                                            iterateTestMillerRabin (n-1) k xs m verbose

testMillerRabin :: Int -> Int -> [Integer] -> Int -> Int -> IO ()
testMillerRabin _ _ [] m v = putStr ""
testMillerRabin _ k _ 0 _  = putStrLn ("\nGiving up. Can't find any primes (k="++(show k)++").")
testMillerRabin n k (x:xs) m v = do
                                  p <- primeMR k x
                                  if p then do
                                    putStrLn ""
                                    putStrLn ("Probably prime (k = "++(show k)++"):  " ++ (show x)) 
                                  else do
                                    if (v == 1) then putStrLn ("Composite: " ++ (show x)) else putStr "."
                                    testMillerRabin n k xs (m-1) v

-------------
-- Helpers --
-------------
-- If verbose, only print cases which return "Probably prime" otherwise print all test cases
doMain66 :: Int -> IO ()
doMain66 verbose = do
  let n = 1
  let m = 500 -- How many numbers to try before quitting
  let k = maxBound :: Int
  
  putStr ("Checking the first " ++ (show $ 11 * m) ++ " Carmichael numbers for false primes")
  if(verbose == 0) then putStrLn "\nEach dot (.) represents an exposed composite" else putStr ""
  
  iterateTestMillerRabin n k              carmichael  m verbose -- 0  - ( m - 1)
  iterateTestMillerRabin n k (drop m      carmichael) m verbose -- m  - (2m - 1)
  iterateTestMillerRabin n k (drop (2*m)  carmichael) m verbose -- 2m - (3m - 1)
  iterateTestMillerRabin n k (drop (3*m)  carmichael) m verbose -- 3m - (4m - 1)
  iterateTestMillerRabin n k (drop (4*m)  carmichael) m verbose -- 4m - (5m - 1)
  iterateTestMillerRabin n k (drop (5*m)  carmichael) m verbose -- 5m - (6m - 1)
  iterateTestMillerRabin n k (drop (6*m)  carmichael) m verbose -- 6m - (7m - 1)
  iterateTestMillerRabin n k (drop (7*m)  carmichael) m verbose -- 7m - (8m - 1)
  iterateTestMillerRabin n k (drop (8*m)  carmichael) m verbose -- 8m - (9m - 1)
  iterateTestMillerRabin n k (drop (9*m)  carmichael) m verbose -- 9m - (10m - 1)
  iterateTestMillerRabin n k (drop (10*m) carmichael) m verbose -- 10m - (11m - 1)
  
-- Print all test cases
verboseMain66 :: IO ()
verboseMain66 = doMain66 1

