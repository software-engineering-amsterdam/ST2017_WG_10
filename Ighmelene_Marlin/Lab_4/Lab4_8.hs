module Lab4_8 where

import Data.List
import System.Random
import Test.QuickCheck    
import Lab4_5
import Lab4_6
import Lab4_7

-- 30 min

----------------
-- Properties --
----------------

-- Check if the symClos of the trClos of R is equal to trClos of the symClos or R
symTrClosEqTrSymClos :: Ord a => Rel a -> Bool
symTrClosEqTrSymClos rs = do
                            let symTrClos = (symClos.trClos) rs
                            let trSymClos = (trClos.symClos) rs
                            symTrClos == trSymClos
-----------
-- Tests --
-----------

testIsSymTrClosEqTrSymClos :: IO ()
testIsSymTrClosEqTrSymClos = do
                              let n =   100
                              cases <-  genRels n
                              propTester_4_7_1 n symTrClosEqTrSymClos cases

{-
If the symClos or the trClos is equal to the trClos of the symClos then I should not find any test cases that prove otherwise.
This tests continuously fail on the first try. So the symmetric closure of the transitive closure of R IS NOT the same as the transitive closure or the symmetric closure of R

---

# 1
testIsSymTrClosEqTrSymClos
"Failed on: [(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(1,0),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6)]"

rs = [(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(1,0),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6)]

(symClos.trClos) rs
[(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(1,0),(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(3,0),(3,1),(3,2),(4,0),(4,1),(4,2),(5,0),(5,1),(5,2),(6,0),(6,1),(6,2),(7,0),(7,1),(7,2),(8,0),(8,1),(8,2),(9,0),(9,1),(9,2)]

(trClos.symClos) rs
[(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(1,0),(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,6),(3,7),(3,8),(3,9),(4,0),(4,1),(4,2),(4,3),(4,4),(4,5),(4,6),(4,7),(4,8),(4,9),(5,0),(5,1),(5,2),(5,3),(5,4),(5,5),(5,6),(5,7),(5,8),(5,9),(6,0),(6,1),(6,2),(6,3),(6,4),(6,5),(6,6),(6,7),(6,8),(6,9),(7,0),(7,1),(7,2),(7,3),(7,4),(7,5),(7,6),(7,7),(7,8),(7,9),(8,0),(8,1),(8,2),(8,3),(8,4),(8,5),(8,6),(8,7),(8,8),(8,9),(9,0),(9,1),(9,2),(9,3),(9,4),(9,5),(9,6),(9,7),(9,8),(9,9)]

---

#2 testIsSymTrClosEqTrSymClos
"Failed on: [(0,0),(0,2),(0,6),(1,0),(1,2),(1,7),(1,8),(1,9),(2,3),(2,6),(2,7),(2,9),(3,4),(3,6),(3,7),(3,8),(5,0),(5,2),(5,3),(5,7),(5,8),(6,1),(6,3),(6,4),(6,5),(6,8),(6,9),(7,2),(7,4),(7,6),(7,9),(8,1),(8,2),(8,5),(8,8),(8,9),(9,2),(9,7),(9,8)]"

rs = [(0,0),(0,2),(0,6),(1,0),(1,2),(1,7),(1,8),(1,9),(2,3),(2,6),(2,7),(2,9),(3,4),(3,6),(3,7),(3,8),(5,0),(5,2),(5,3),(5,7),(5,8),(6,1),(6,3),(6,4),(6,5),(6,8),(6,9),(7,2),(7,4),(7,6),(7,9),(8,1),(8,2),(8,5),(8,8),(8,9),(9,2),(9,7),(9,8)]

(symClos.trClos) rs [(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(1,0),(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,6),(3,7),(3,8),(3,9),(4,0),(4,1),(4,2),(4,3),(4,5),(4,6),(4,7),(4,8),(4,9),(5,0),(5,1),(5,2),(5,3),(5,4),(5,5),(5,6),(5,7),(5,8),(5,9),(6,0),(6,1),(6,2),(6,3),(6,4),(6,5),(6,6),(6,7),(6,8),(6,9),(7,0),(7,1),(7,2),(7,3),(7,4),(7,5),(7,6),(7,7),(7,8),(7,9),(8,0),(8,1),(8,2),(8,3),(8,4),(8,5),(8,6),(8,7),(8,8),(8,9),(9,0),(9,1),(9,2),(9,3),(9,4),(9,5),(9,6),(9,7),(9,8),(9,9)]

(trClos.symClos) rs [(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(1,0),(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,6),(3,7),(3,8),(3,9),(4,0),(4,1),(4,2),(4,3),(4,4),(4,5),(4,6),(4,7),(4,8),(4,9),(5,0),(5,1),(5,2),(5,3),(5,4),(5,5),(5,6),(5,7),(5,8),(5,9),(6,0),(6,1),(6,2),(6,3),(6,4),(6,5),(6,6),(6,7),(6,8),(6,9),(7,0),(7,1),(7,2),(7,3),(7,4),(7,5),(7,6),(7,7),(7,8),(7,9),(8,0),(8,1),(8,2),(8,3),(8,4),(8,5),(8,6),(8,7),(8,8),(8,9),(9,0),(9,1),(9,2),(9,3),(9,4),(9,5),(9,6),(9,7),(9,8),(9,9)]

---

#3 testIsSymTrClosEqTrSymClos
"Failed on: [(0,0),(0,1),(0,3),(1,0)]"

rs = [(0,0),(0,1),(0,3),(1,0)]
                            
(symClos.trClos) rs
[(0,0),(0,1),(0,3),(1,0),(1,1),(1,3),(3,0),(3,1)]
                            
(trClos.symClos) rs
[(0,0),(0,1),(0,3),(1,0),(1,1),(1,3),(3,0),(3,1),(3,3)]

---

#4 testIsSymTrClosEqTrSymClos
"Failed on: [(0,0),(0,1),(0,2),(0,3),(0,5),(0,6),(0,7),(0,8),(0,9),(0,10),(1,0),(1,1),(1,2),(1,4),(1,6),(1,7),(1,9),(1,10),(2,0),(2,1),(2,2),(2,3),(2,4),(2,6),(2,7),(2,8),(2,9),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,7),(4,0),(4,1),(4,3),(4,7),(4,8)]"

rs = [(0,0),(0,1),(0,2),(0,3),(0,5),(0,6),(0,7),(0,8),(0,9),(0,10),(1,0),(1,1),(1,2),(1,4),(1,6),(1,7),(1,9),(1,10),(2,0),(2,1),(2,2),(2,3),(2,4),(2,6),(2,7),(2,8),(2,9),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,7),(4,0),(4,1),(4,3),(4,7),(4,8)]

(symClos.trClos) rs [(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(0,10),(1,0),(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(1,10),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(2,10),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,6),(3,7),(3,8),(3,9),(3,10),(4,0),(4,1),(4,2),(4,3),(4,4),(4,5),(4,6),(4,7),(4,8),(4,9),(4,10),(5,0),(5,1),(5,2),(5,3),(5,4),(6,0),(6,1),(6,2),(6,3),(6,4),(7,0),(7,1),(7,2),(7,3),(7,4),(8,0),(8,1),(8,2),(8,3),(8,4),(9,0),(9,1),(9,2),(9,3),(9,4),(10,0),(10,1),(10,2),(10,3),(10,4)]

(trClos.symClos) rs [(0,0),(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(0,8),(0,9),(0,10),(1,0),(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(1,10),(2,0),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(2,10),(3,0),(3,1),(3,2),(3,3),(3,4),(3,5),(3,6),(3,7),(3,8),(3,9),(3,10),(4,0),(4,1),(4,2),(4,3),(4,4),(4,5),(4,6),(4,7),(4,8),(4,9),(4,10),(5,0),(5,1),(5,2),(5,3),(5,4),(5,5),(5,6),(5,7),(5,8),(5,9),(5,10),(6,0),(6,1),(6,2),(6,3),(6,4),(6,5),(6,6),(6,7),(6,8),(6,9),(6,10),(7,0),(7,1),(7,2),(7,3),(7,4),(7,5),(7,6),(7,7),(7,8),(7,9),(7,10),(8,0),(8,1),(8,2),(8,3),(8,4),(8,5),(8,6),(8,7),(8,8),(8,9),(8,10),(9,0),(9,1),(9,2),(9,3),(9,4),(9,5),(9,6),(9,7),(9,8),(9,9),(9,10),(10,0),(10,1),(10,2),(10,3),(10,4),(10,5),(10,6),(10,7),(10,8),(10,9),(10,10)]

---

#5 testIsSymTrClosEqTrSymClos
"Failed on: [(0,0),(0,1),(0,2),(0,3),(1,0),(1,3),(2,0),(2,2)]"

rs = [(0,0),(0,1),(0,2),(0,3),(1,0),(1,3),(2,0),(2,2)]

(symClos.trClos) rs
[(0,0),(0,1),(0,2),(0,3),(1,0),(1,1),(1,2),(1,3),(2,0),(2,1),(2,2),(2,3),(3,0),(3,1),(3,2)]
                            
(trClos.symClos) rs
[(0,0),(0,1),(0,2),(0,3),(1,0),(1,1),(1,2),(1,3),(2,0),(2,1),(2,2),(2,3),(3,0),(3,1),(3,2),(3,3)]

-}