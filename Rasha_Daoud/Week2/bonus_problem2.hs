-- projecteuler problem2 - time: 15 mins
module Problem2 where

import Data.List
import Data.Char
import System.Random
import Test.QuickCheck

{-Each new term in the Fibonacci sequence is generated by adding the previous two terms.
	By starting with 1 and 2, the first 10 terms will be:
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. -}

fib :: Int -> Int
fib 0 = 1
fib 1 = 1
fib n = fib (n-1) + fib (n-2)

generateFibList :: [Int]
generateFibList = 1 : 1 : zipWith (+) generateFibList (drop 1 generateFibList)


sumEvenFib :: Int -> Int
sumEvenFib n = sum $ filter even (takeWhile (<n) generateFibList)

{- GHCi:
	*Problem2> sumEvenFib 4000000
	4613732
-}

main = do
		print "Result problem 2:"
		print (sumEvenFib 4000000)