-- time: 15 minutes
module Lab6_3
where

import Data.List
import System.Random
import Lecture6
import Lab6_1
import Lab6_2

{-In order to test Fermat's Primality Check (as implemented in function prime_test_F), the list of prime numbers generated by Eratosthenes' sieve is useless, for Fermat's Primality Check correctly classify the primes as primes. Where the check can go wrong is on classifying composite numbers; these can slip through the Fermat test.
-}


composites' :: [Integer]
composites' = [ x | x <- [2..], not $ prime x] -- even though 2 & 3 do not count!

{-
*Lab6_3> composites' 
[4,6,8,9,10,12,14,15,16,18,20,21,22,24,25,26,27,28,30,32,33,34,35,36,38,39,40,42,44,45,46,48,49,50,51,52,54,55,56,57,58,60,62,63,64,65,66,68,69,70,72,74,75,76,77,78,80,81,82,84,85,86,87,88,90,91,92,93,94,95,96,98,99,100,102,104,105,106,108,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,150,152,153,154,155,156,158,159,160,161,162,164,165,166,168,169,170,171,172,174,175,176,177,178,180,182,183,184,185,186,187,188,189,190,192,194,195,196,198,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,224,225,226,228,230,231,232,234,235,236,237,238,240,242,243,244,245,246,247,248,249,250,252,253,254,255,256,............
............]
-}


primeTestF_ [] = return True
primeTestF_ (x:xs) = do 
 f <- primeTestF x
 print ("processing x = " ++ show x)
 if (f == True) then primeTestF_ xs
 else return False

main63 = do
  primeTestF_ primes;
